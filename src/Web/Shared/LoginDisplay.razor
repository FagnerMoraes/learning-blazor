@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<span class="navbar-item">
    <AuthorizeView>
        <Authorizing>
            <button class="button is-rounded is-loading level-item" disabled>
                Logging in
            </button>
        </Authorizing>
        <Authorized>
            Hello, @(context.User?.Identity?.Name ?? "❔")
            <button class="button is-rounded level-item" @onclick="OnLogOut">
                <span class="icon">
                    <i class="fas fa-sign-out-alt"></i>
                </span>
                <span>Log out</span>
            </button>
        </Authorized>
        <NotAuthorized>
            <button class="button is-rounded level-item" @onclick="OnLogIn">
                <span class="icon">
                    <i class="fas fa-sign-in-alt"></i>
                </span>
                <span>Log in</span>
            </button>
        </NotAuthorized>
    </AuthorizeView>
</span>

@code {
    private void OnLogIn(MouseEventArgs args)
    {
        Navigation.NavigateTo("authentication/login", true);
    }

    private async Task OnLogOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}

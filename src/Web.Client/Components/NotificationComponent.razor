<!--  Copyright (c) 2021 David Pine. All rights reserved.
      Licensed under the MIT License.
-->

@inherits LocalizableComponentBase<NotificationComponent>

<span class="navbar-item">
    <button class="button is-danger is-rounded"
            title=@Localizer["Notifications"] @onclick=Show>
        <span class="icon">
            <i class="fas fa-bell"></i>
        </span>
    </button>
    @{
        if (_notifications?.Any(notification => !notification.IsDismissed) ?? false)
        {
            <span class="badge is-info" style="right: .8rem; top: .8rem;">
                @_notifications.Count(notification => !notification.IsDismissed)
            </span>
        }
    }
</span>

<div class="quickview has-background-dark @_showClass">
    <header class="quickview-header has-background-danger-dark">
        <p class="title is-size-4 has-text-black">
            <span class="icon pr-2">
                <i class="fas fa-bullhorn"></i>
            </span>
            <span>@Localizer["Notifications"]</span>
        </p>
        <span class="delete" @onclick=Dismiss></span>
    </header>

    <div class="quickview-body">
        <div class="quickview-block p-4">
            @if (_notifications is { Count: > 0 })
            {
                foreach (var notification in _notifications.Where(n => !n.IsDismissed))
                {
                    <div class="notification">
                        <button class="delete" @onclick=@(_ => DismissNotification(notification))></button>
                        @(new MarkupString(notification.Text))
                    </div>
                }
            }
        </div>
    </div>

    <footer class="quickview-footer has-background-light">
        @{
            var (hasValue, dateTime) = _latestNotificationDateTime;
            if (hasValue)
            {
                @Localizer["UpdatedOnFormat",
                    dateTime.ToShortDateString(),
                    dateTime.ToShortTimeString()]
            }
        }
    </footer>
</div>


<!--  Copyright (c) 2021 David Pine. All rights reserved.
      Licensed under the MIT License.  -->

@inherits LocalizableComponentBase<WeatherComponent>

<article class="blazor-tile-container">
    <div class="gradient-bg weather-gradient"></div>
    <div class="icon-overlay zap-svg"></div>
    <div class="blaze-content">
        <p class="title" translate="no">
            <span class="is-emoji">🔥</span> <span class="has-text-light"> Blazor-@Localizer["Weather"]</span>
        </p>
        <AdditiveSpeechComponent Message=@_model?.Message />
        <div class="columns has-text-centered">
            @if (_state is ComponentState.Loaded)
            {
                var weather = _model!;
                <div class="column is-one-third">
                    <div class="box dotnet-box-border is-alpha-bg-50">
                        <article class="media">
                            <div class="media-left">
                                <figure class="image is-128x128">
                                    <img src=@(weather.ImagePath)
                                        class="has-img-shadow"
                                        alt="@Localizer["CurrentWeatherVisual"]">
                                </figure>
                            </div>
                            <div class="media-content">
                                <div class="content has-text-right has-text-light">
                                    <div>
                                        <span class="title has-text-light">@weather.Temperature</span>
                                        <span class="heading">
                                            <i class="fas fa-arrow-up"></i> @(weather.HighTemp) | <i class="fas fa-arrow-down"></i> @(weather.LowTemp)
                                        </span>
                                        <span class="heading">@weather.Description</span>
                                        <span class="heading"><i class="fas fa-wind"></i> @weather.WindSpeed <sup>@(Localizer[weather.WindDegree.ToVerbosePositionalCardinal()])</sup></span>
                                    </div>
                                </div>
                            </div>
                        </article>
                        <div class="has-text-centered has-text-light">
                            @($"{weather.City}, {weather.State} ({weather.Country})")
                        </div>
                    </div>
                </div>
                <div class="column">
                    <div class="level">
                        @foreach (DailyWeather daily in weather.DailyWeather)
                        {
                            <div class="level-item has-text-centered has-text-light">
                                <div>
                                    <p class="heading is-size-6 is-underlined">
                                        @daily.DateTime.ToString("ddd")
                                    </p>
                                    <p class="title">
                                        <figure class="image is-64x64">
                                            <img src=@weather.GetDailyImagePath(daily)
                                                class="has-img-shadow"
                                                alt="@daily.Weather[0].Description">
                                        </figure>
                                    </p>
                                    <p class="heading">@daily.Weather[0].Main</p>
                                    <p class="heading has-text-weight-bold">
                                        <i class="fas fa-arrow-up"></i>
                                        @weather.GetDailyHigh(daily)
                                    </p>
                                    <p class="heading has-text-weight-bold">
                                        <i class="fas fa-arrow-down"></i>
                                        @weather.GetDailyLow(daily)
                                    </p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
            else if (_state is ComponentState.Loading)
            {
                <div class="column is-full">
                    <div class="fa-3x">
                        <i class="fas fa-sync fa-spin"></i>
                    </div>
                </div>
            }
            else
            {
                <div class="column is-full">
                    @Localizer["WeatherUnavailable"]
                </div>
            }
        </div>
    </div>
</article>
